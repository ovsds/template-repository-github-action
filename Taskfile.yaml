version: 3

silent: true

vars:
  NENV: "node_modules"
  TEST_RESULTS: ".test_results"

tasks:
  _prettier:
    internal: true
    cmds:
      - "{{.NENV}}/.bin/prettier {{.COMMAND}}"

  _with_nvm:
    internal: true
    cmds:
      - "source ${HOME}/.nvm/nvm.sh && nvm use && {{.COMMAND}}"

  init:
    desc: Initialize project environment
    cmds:
      - echo 'Installing node version...'
      - task: _with_nvm
        vars: { COMMAND: "nvm install" }

      - echo 'Installing node dependencies...'
      - task: _with_nvm
        vars: { COMMAND: "npm clean-install" }

      - echo 'Installing husky pre-commit...'
      - task: _with_nvm
        vars: { COMMAND: "npm run prepare-husky" }

      - for: { var: SERVICES, as: SERVICE }
        task: "{{.SERVICE}}:init"

  lint:
    desc: Lint project
    cmds:
      - echo 'Running prettier checks...'
      - task: _prettier
        vars: { COMMAND: "--check ." }

  lint-fix:
    desc: Lint fix project
    cmds:
      - echo 'Running prettier fixes...'
      - task: _prettier
        vars: { COMMAND: "--write ." }

  test:
    desc: Test project
    cmds:
      - echo 'Cleaning test results directory...'
      - rm -rf {{.TEST_RESULTS}}

      - echo 'Building test project...'
      - cookiecutter --output-dir {{.TEST_RESULTS}} --replay-file .test_replay.json .

      - echo 'Initializing git...'
      - cd {{.TEST_RESULTS}}/test/ && git init

      - echo 'Generating lock file...'
      - task: _with_nvm
        vars: { COMMAND: "cd {{.TEST_RESULTS}}/test && npm install --package-lock-only" }

      - echo 'Testing Taskfile commands...'
      - task --dir {{.TEST_RESULTS}}/test init
      - task --dir {{.TEST_RESULTS}}/test lint
      - task --dir {{.TEST_RESULTS}}/test lint-fix
      - task --dir {{.TEST_RESULTS}}/test clean

  clean:
    desc: Clean project environment
    cmds:
      - echo 'Cleaning node dependencies...'
      - rm -rf {{.NENV}}

  dependencies-update:
    desc: Update dependencies
    cmds:
      - echo 'Updating node dependencies...'
      - task: _with_nvm
        vars: { COMMAND: "npm update" }
      - task: _with_nvm
        vars: { COMMAND: "npm outdated" }
      - task: _with_nvm
        vars: { COMMAND: "npm audit" }

  # CI-specific

  ci-init:
    desc: Initialize project environment in CI
    cmds:
      - echo 'Installing node dependencies...'
      - npm clean-install

  ci-test:
    desc: Test project in CI
    cmds:
      - echo 'Cleaning test results directory...'
      - rm -rf {{.TEST_RESULTS}}

      - echo 'Building test project...'
      - cookiecutter --output-dir {{.TEST_RESULTS}} --replay-file .test_replay.json .

      - echo 'Initializing git...'
      - cd {{.TEST_RESULTS}}/test/ && git init

      - echo 'Generating lock file...'
      - cd {{.TEST_RESULTS}}/test && npm install --package-lock-only

      - echo 'Testing Taskfile commands...'
      - task --dir {{.TEST_RESULTS}}/test ci-init
      - task --dir {{.TEST_RESULTS}}/test lint
      - task --dir {{.TEST_RESULTS}}/test lint-fix
      - task --dir {{.TEST_RESULTS}}/test clean
